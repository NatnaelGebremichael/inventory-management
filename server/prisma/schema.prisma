generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Organization {
  id         String     @id @default(cuid())
  name       String
  address    String?
  phone      String?
  email      String?
  employees  Employee[]
  products   Product[]
  categories Category[]
  suppliers  Supplier[]
  customers  Customer[]
}

model Employee {
  id             String          @id @default(cuid())
  organizationId String
  organization   Organization    @relation(fields: [organizationId], references: [id])
  firstName      String
  lastName       String
  position       String?
  hireDate       DateTime?
  salary         Decimal?
  orders         Order[]
  purchaseOrders PurchaseOrder[]
  stockReceipts  StockReceipt[]
  auditLogs      AuditLog[]
}

model Product {
  id                 String              @id @default(cuid())
  organizationId     String
  organization       Organization        @relation(fields: [organizationId], references: [id])
  name               String
  description        String?
  price              Decimal
  stockQuantity      Int
  reorderPoint       Int                 @default(0)
  categoryId         String?
  category           Category?           @relation(fields: [categoryId], references: [id])
  supplierId         String?
  supplier           Supplier?           @relation(fields: [supplierId], references: [id])
  orderItems         OrderItem[]
  purchaseOrderItems PurchaseOrderItem[]
  stockReceiptItems  StockReceiptItem[]
}

model Category {
  id             String       @id @default(cuid())
  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id])
  name           String
  description    String?
  products       Product[]
}

model Supplier {
  id             String          @id @default(cuid())
  organizationId String
  organization   Organization    @relation(fields: [organizationId], references: [id])
  name           String
  contactPerson  String?
  phone          String?
  email          String?
  address        String?
  leadTimeDays   Int?
  products       Product[]
  purchaseOrders PurchaseOrder[]
}

model Customer {
  id             String       @id @default(cuid())
  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id])
  firstName      String
  lastName       String
  email          String?      @unique
  phone          String?
  address        String?
  orders         Order[]
}

model Order {
  id          String      @id @default(cuid())
  customerId  String
  customer    Customer    @relation(fields: [customerId], references: [id])
  employeeId  String
  employee    Employee    @relation(fields: [employeeId], references: [id])
  orderDate   DateTime    @default(now())
  totalAmount Decimal
  status      String      @default("Pending")
  orderItems  OrderItem[]
}

model OrderItem {
  id        String  @id @default(cuid())
  orderId   String
  order     Order   @relation(fields: [orderId], references: [id])
  productId String
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int
  unitPrice Decimal
}

model PurchaseOrder {
  id                   String              @id @default(cuid())
  supplierId           String
  supplier             Supplier            @relation(fields: [supplierId], references: [id])
  employeeId           String
  employee             Employee            @relation(fields: [employeeId], references: [id])
  orderDate            DateTime            @default(now())
  totalAmount          Decimal
  status               String              @default("Pending")
  expectedDeliveryDate DateTime?
  purchaseOrderItems   PurchaseOrderItem[]
  stockReceipts        StockReceipt[]
}

model PurchaseOrderItem {
  id              String        @id @default(cuid())
  purchaseOrderId String
  purchaseOrder   PurchaseOrder @relation(fields: [purchaseOrderId], references: [id])
  productId       String
  product         Product       @relation(fields: [productId], references: [id])
  quantity        Int
  unitPrice       Decimal
}

model StockReceipt {
  id                String             @id @default(cuid())
  purchaseOrderId   String
  purchaseOrder     PurchaseOrder      @relation(fields: [purchaseOrderId], references: [id])
  employeeId        String
  employee          Employee           @relation(fields: [employeeId], references: [id])
  receiptDate       DateTime           @default(now())
  stockReceiptItems StockReceiptItem[]
}

model StockReceiptItem {
  id               String       @id @default(cuid())
  stockReceiptId   String
  stockReceipt     StockReceipt @relation(fields: [stockReceiptId], references: [id])
  productId        String
  product          Product      @relation(fields: [productId], references: [id])
  quantityReceived Int
}

model AuditLog {
  id              String   @id @default(cuid())
  actionType      String
  tableName       String
  recordId        String
  employeeId      String
  employee        Employee @relation(fields: [employeeId], references: [id])
  actionTimestamp DateTime @default(now())
  actionDetails   String?
}
